name: Simple HTTP server

on:
  push:
    branches: [ develop, main ]
    tags: ['v*.*.*']

env:
  ENV_GCR_IMAGE: gcr.io/its-artifact-commons/simple-http

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Prepare
      id: prep
      run: |
        DOCKER_IMAGE=itssoftware/simple-http
        GCR_IMAGE=$ENV_GCR_IMAGE
        VERSION=latest
        GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")

        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        elif [[ $GITHUB_REF == refs/heads/* ]]; then
          VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')-$GIT_HASH
          #if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
          #  VERSION=master
          #fi
        fi

        TAGS="${DOCKER_IMAGE}:${VERSION}"
        GCR_TAGS="${GCR_IMAGE}:${VERSION}"

        if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          MINOR=${VERSION%.*}
          MAJOR=${MINOR%.*}
          TAGS="$TAGS,${DOCKER_IMAGE}:${MINOR},${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:latest"
        elif [ "${{ github.event_name }}" = "push" ]; then
          TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
        fi

        echo ::set-output name=tags::${TAGS}
        echo ::set-output name=gcr_tags::${GCR_TAGS}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Activate GCP service account
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        service_account_email: ${{ secrets.GCR_EMAIL }}
        service_account_key: ${{ secrets.GCR_KEY }}

    - name: GCR Authen
      run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker

    - name: Build and push images
      uses: docker/build-push-action@v2
      with:
        file: simple-http/Dockerfile
        push: true
        load: false
        tags: ${{ steps.prep.outputs.gcr_tags }}
